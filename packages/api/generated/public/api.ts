/**
 * Generated by orval v6.10.3 üç∫
 * Do not edit manually.
 */
import type {
	LoginProcessResponse,
	LoginProcessRequest,
	LoginPasswordResponse,
	LoginPasswordRequest,
	SignupProcessResponse,
	SignupProcessRequest,
	SignupPasswordResponse,
	RefreshResponse,
} from "./model";
import { customInstance } from "../../lib/fetcher";

// eslint-disable-next-line
type SecondParameter<T extends (...args: any) => any> = T extends (config: any, args: infer P) => any ? P : never;

export const createLoginProcess = (
	loginProcessRequest: LoginProcessRequest,
	options?: SecondParameter<typeof customInstance>,
) => {
	return customInstance<LoginProcessResponse>(
		{
			url: `/api/v1/process/login`,
			method: "post",
			headers: { "Content-Type": "application/json" },
			data: loginProcessRequest,
		},
		options,
	);
};

export const loginProcessPassword = (
	loginPasswordRequest: LoginPasswordRequest,
	options?: SecondParameter<typeof customInstance>,
) => {
	return customInstance<LoginPasswordResponse>(
		{
			url: `/api/v1/process/login/password/password`,
			method: "post",
			headers: { "Content-Type": "application/json" },
			data: loginPasswordRequest,
		},
		options,
	);
};

export const createSignupProcess = (
	signupProcessRequest: SignupProcessRequest,
	options?: SecondParameter<typeof customInstance>,
) => {
	return customInstance<SignupProcessResponse>(
		{
			url: `/api/v1/process/signup`,
			method: "put",
			headers: { "Content-Type": "application/json" },
			data: signupProcessRequest,
		},
		options,
	);
};

export const signupProcessPassword = (
	loginPasswordRequest: LoginPasswordRequest,
	options?: SecondParameter<typeof customInstance>,
) => {
	return customInstance<SignupPasswordResponse>(
		{
			url: `/api/v1/process/signup/password/password`,
			method: "post",
			headers: { "Content-Type": "application/json" },
			data: loginPasswordRequest,
		},
		options,
	);
};

export const refresh = (options?: SecondParameter<typeof customInstance>) => {
	return customInstance<RefreshResponse>({ url: `/api/v1/session/refresh/refresh`, method: "post" }, options);
};

export type CreateLoginProcessResult = NonNullable<Awaited<ReturnType<typeof createLoginProcess>>>;
export type LoginProcessPasswordResult = NonNullable<Awaited<ReturnType<typeof loginProcessPassword>>>;
export type CreateSignupProcessResult = NonNullable<Awaited<ReturnType<typeof createSignupProcess>>>;
export type SignupProcessPasswordResult = NonNullable<Awaited<ReturnType<typeof signupProcessPassword>>>;
export type RefreshResult = NonNullable<Awaited<ReturnType<typeof refresh>>>;
